#$ java -jar -Dspring.profiles.active=production demo-0.0.1-SNAPSHOT.jar
#In Spring Boot you can also set the active profile in application.properties, e.g.
#spring.profiles.active=dev
#spring.main.web_environment=false

server.port: 9009
#https\u652f\u6301
# Tell Spring Security (if used) to require requests over HTTPS
security.require-ssl=true
# The format used for the keystore JKS or PKCS12
#server.ssl.key-store-type:JKS
# The path to the keystore containing the certificate
#server.ssl.key-store=classpath:shianca.jks
# The password used to generate the certificate
#server.ssl.key-store-password=pwd4shianca
# The alias mapped to the certificate
#server.ssl.key-alias=tomcat
server.tomcat.remote-ip-header=x-forwarded-for
server.tomcat.protocol-header=x-forwarded-proto
spring.mvc.view.prefix: /WEB-INF/jsp/
spring.mvc.view.suffix: .jsp

application.message: Hello \u795e\u4e91
application.globle: \u5168\u5c40\u4fe1\u606f
application.siteTitle=\u7fe1\u7fe0\u6e7e\u6cf8\u6cbd\u6e56
application.uploadDir=tmp/luguhu
application.uploadTmpDir=tmp/luguhu/tmp

#org.springframework.boot.env.PropertySourceLoader=cn.anthony.luguhu.UnicodePropertiesPropertySourceLoader
#\u5fae\u4fe1\u53c2\u6570
wechat.mp.appId:wx7a058c81272e3cef
wechat.mp.secret:8a251df8751fc540804aa17e9b1a832d
wechat.mp.token:chxlqqxmbdwwlc
wechat.mp.aesKey:eHqnBuZyuT11maIISuGak51sSndLAzlDgEI4q7sphUR
wechat.pay.appId:wx7a058c81272e3cef
wechat.pay.mchId:1448996602
wechat.pay.mchKey:jzjzlhnszkjdsjxglzbslymkshcxxjyc
wechat.pay.keyPath:
wechat.pay.notifyUrl:http://www.shianca.com/paycallback
#\u5229\u7f8e\u53c2\u6570
#wechat.mp.appId:wxcf411df5000e9692
#wechat.mp.secret:88984f146a5d48184db464cfb354d322
#wechat.mp.token:lumia123weixin
#wechat.mp.aesKey:cRQUYLkQcmrVcQQV78uPFFvULWQrWOs2mw9yC8l91fC
#\u6587\u4ef6\u4e0a\u4f20\u8bbe\u7f6e
spring.http.multipart.max-file-size=2MB
spring.http.multipart.max-request-size=10MB

spring.application.index=index
spring.data.rest.basePath=/rest

#\u7528\u6237\u540d \u5bc6\u7801\u914d\u7f6e  
security.user.name=admin
security.user.password=test
#\u5728\u7a0b\u5e8f\u91cc\u8bbe\u7f6e\uff0c\u5219\u4e0d\u7528\u6b64\u5904
#security.ignored= /api/**,/wp/** 

#logging.path=/var/logs
#logging.file=myapp.log
#logging.config= # location of config file (default classpath:logback.xml for logback)
logging.level.*: debug
#logging.level.org.springframework.web: ERROR
#logging.level.org.hibernate: ERROR
logging.level.io.swagger.models.parameters.AbstractSerializableParameter=error
logging.level.springfox=error
#Database Configuration
spring.datasource.url=jdbc\:mysql\://127.0.0.1\:3306/luguhu?useUnicode\=true&characterEncoding\=utf-8&zeroDateTimeBehavior\=convertToNull&useSSL\=false&rewriteBatchedStatements\=true
spring.datasource.username=lghuser
spring.datasource.password=pwd4lgh
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.sqlScriptEncoding=utf8
spring.jpa.hibernate.ddl-auto: update
spring.jpa.hibernate.naming_strategy: org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.database: mysql
spring.jpa.show-sql: false
#Hibernate Configuration
hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
hibernate.jdbc.batch_size=10
#hibernate.format_sql=true

# HTTP message conversion
#spring.http.converters.preferred-json-mapper= gson # the preferred JSON mapper to use for HTTP message conversion. Set to "gson" to force the use of Gson when both it and Jackson are on the classpath.
# INTERNATIONALIZATION (MessageSourceAutoConfiguration)
spring.messages.basename=messages_zh_CN
#spring.messages.cache-seconds=-1
#spring.http.encoding.force=true
#spring.http.encoding.charset=UTF-8
#spring.http.encoding.enabled=true
#server.tomcat.uri-encoding = UTF-8
#spring.messages.encoding=UTF-8
#spring.messages.fallback-to-system-locale=true

#spring.thymeleaf.mode=LEGACYHTML5
#spring.thymeleaf.cache=false